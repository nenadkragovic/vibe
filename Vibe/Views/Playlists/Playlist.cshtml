@using Vibe.Models
@using Newtonsoft.Json;
@model PlaylistViewModel
@{
    ViewBag.Title = "Playlist";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var user = (VibeUser)HttpContext.Current.Session["user"];
}
<h2>@Model.Name</h2>
<br />
<p class="playlistDescription">@Model.Description</p>
<br />
<div class="playlist">
    <table class="table">
        <thead>
            <tr>
                <th class="text-left">Play</th>
                <th class="text-center">Name</th>
                <th class="text-center">Artist</th>
                <th class="text-center">Album</th>
                <th class="text-center">Likes</th>
                @if (user != null)
                {
                    <th class="text-right">Actions</th>
                }

            </tr>
        </thead>
        <tbody data-bind="foreach: songs">
            <tr>
                <td><span data-bind="click: selectSong" class="glyphicon glyphicon-play" aria-hidden="true"></span></td>
                <td class="text-center" data-bind="text: Name"></td>
                <td class="text-center"><a data-bind="text: Artist.Name, attr: {'href': Artist.Link }"></a></td>
                <td class="text-center"><a data-bind="text: Album.Name, attr: {'href': Album.Link }"></a></td>
                <td class="text-center" data-bind="text: Likes"></td>
                @if (user != null)
                {
                    <td class="td-actions text-right">
                        @if (Model.OwnerId == user.Id.ToString())
                        {
                            <span data-bind="click: removeSongFromPlaylist" class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                        }
                        <span data-bind="click: tumbsUp" class="glyphicon glyphicon-thumbs-up" aria-hidden="true"></span>
                        <span data-bind="click: addToPlaylist" class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span>
                    </td>
                }
            </tr>
        </tbody>
    </table>
</div>

@if (Model.OtherPlaylists != null)
{
    <div class="bg-overlay"></div>
    <div class="popup">
        <div class="form">
            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
            <form id="addToPlaylistForm" data-bind="submit: addSongToPlaylist">
                <div class="form-group">
                    @Html.LabelFor(m => m.OtherPlaylists, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.OtherPlaylists.First().Text, Model.OtherPlaylists, new { @class = "form-control", id = "playlists" })
                        @Html.ValidationMessageFor(m => m.OtherPlaylists, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <input type="submit" value="Add" class="btn btn-default" />
                </div>
            </form>
        </div>
    </div>
}
<script type="text/javascript" src="~/Scripts/Playlists/Playlists.js"></script>
<script type="text/javascript">

    $(".glyphicon-remove").click(function () {
        $(".bg-overlay").css({ "display": "none" });
        $(".popup").css({ "display": "none" });
    });

    document.body.style.backgroundImage = "url('../../Content/img/records1.jpg')";

    var VM = new PlaylistViewModel("@Model.Id");
    $(document).ready(function () {
        ko.applyBindings(VM);
    });
</script>
